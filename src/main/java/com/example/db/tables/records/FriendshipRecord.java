/*
 * This file is generated by jOOQ.
 */
package com.example.db.tables.records;


import com.example.db.tables.Friendship;

import java.sql.Timestamp;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record4;
import org.jooq.Row4;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.12.1"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class FriendshipRecord extends UpdatableRecordImpl<FriendshipRecord> implements Record4<Integer, Integer, Integer, Timestamp> {

    private static final long serialVersionUID = 1984232819;

    /**
     * Setter for <code>Java.Friendship.id</code>.
     */
    public void setId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>Java.Friendship.id</code>.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>Java.Friendship.first_user_id</code>.
     */
    public void setFirstUserId(Integer value) {
        set(1, value);
    }

    /**
     * Getter for <code>Java.Friendship.first_user_id</code>.
     */
    public Integer getFirstUserId() {
        return (Integer) get(1);
    }

    /**
     * Setter for <code>Java.Friendship.second_user_id</code>.
     */
    public void setSecondUserId(Integer value) {
        set(2, value);
    }

    /**
     * Getter for <code>Java.Friendship.second_user_id</code>.
     */
    public Integer getSecondUserId() {
        return (Integer) get(2);
    }

    /**
     * Setter for <code>Java.Friendship.friends_since</code>.
     */
    public void setFriendsSince(Timestamp value) {
        set(3, value);
    }

    /**
     * Getter for <code>Java.Friendship.friends_since</code>.
     */
    public Timestamp getFriendsSince() {
        return (Timestamp) get(3);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record4 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row4<Integer, Integer, Integer, Timestamp> fieldsRow() {
        return (Row4) super.fieldsRow();
    }

    @Override
    public Row4<Integer, Integer, Integer, Timestamp> valuesRow() {
        return (Row4) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return Friendship.FRIENDSHIP.ID;
    }

    @Override
    public Field<Integer> field2() {
        return Friendship.FRIENDSHIP.FIRST_USER_ID;
    }

    @Override
    public Field<Integer> field3() {
        return Friendship.FRIENDSHIP.SECOND_USER_ID;
    }

    @Override
    public Field<Timestamp> field4() {
        return Friendship.FRIENDSHIP.FRIENDS_SINCE;
    }

    @Override
    public Integer component1() {
        return getId();
    }

    @Override
    public Integer component2() {
        return getFirstUserId();
    }

    @Override
    public Integer component3() {
        return getSecondUserId();
    }

    @Override
    public Timestamp component4() {
        return getFriendsSince();
    }

    @Override
    public Integer value1() {
        return getId();
    }

    @Override
    public Integer value2() {
        return getFirstUserId();
    }

    @Override
    public Integer value3() {
        return getSecondUserId();
    }

    @Override
    public Timestamp value4() {
        return getFriendsSince();
    }

    @Override
    public FriendshipRecord value1(Integer value) {
        setId(value);
        return this;
    }

    @Override
    public FriendshipRecord value2(Integer value) {
        setFirstUserId(value);
        return this;
    }

    @Override
    public FriendshipRecord value3(Integer value) {
        setSecondUserId(value);
        return this;
    }

    @Override
    public FriendshipRecord value4(Timestamp value) {
        setFriendsSince(value);
        return this;
    }

    @Override
    public FriendshipRecord values(Integer value1, Integer value2, Integer value3, Timestamp value4) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached FriendshipRecord
     */
    public FriendshipRecord() {
        super(Friendship.FRIENDSHIP);
    }

    /**
     * Create a detached, initialised FriendshipRecord
     */
    public FriendshipRecord(Integer id, Integer firstUserId, Integer secondUserId, Timestamp friendsSince) {
        super(Friendship.FRIENDSHIP);

        set(0, id);
        set(1, firstUserId);
        set(2, secondUserId);
        set(3, friendsSince);
    }
}
