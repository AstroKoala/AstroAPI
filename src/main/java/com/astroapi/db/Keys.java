/*
 * This file is generated by jOOQ.
 */
package com.astroapi.db;


import javax.annotation.Generated;

import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.UniqueKey;
import org.jooq.impl.Internal;

import com.astroapi.db.tables.Auth;
import com.astroapi.db.tables.Friendship;
import com.astroapi.db.tables.Posts;
import com.astroapi.db.tables.Sessions;
import com.astroapi.db.tables.Settings;
import com.astroapi.db.tables.Users;
import com.astroapi.db.tables.Verification;
import com.astroapi.db.tables.records.AuthRecord;
import com.astroapi.db.tables.records.FriendshipRecord;
import com.astroapi.db.tables.records.PostsRecord;
import com.astroapi.db.tables.records.SessionsRecord;
import com.astroapi.db.tables.records.SettingsRecord;
import com.astroapi.db.tables.records.UsersRecord;
import com.astroapi.db.tables.records.VerificationRecord;


/**
 * A class modelling foreign key relationships and constraints of tables of 
 * the <code>Java</code> schema.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.12.1"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Keys {

    // -------------------------------------------------------------------------
    // IDENTITY definitions
    // -------------------------------------------------------------------------

    public static final Identity<AuthRecord, Integer> IDENTITY_AUTH = Identities0.IDENTITY_AUTH;
    public static final Identity<FriendshipRecord, Integer> IDENTITY_FRIENDSHIP = Identities0.IDENTITY_FRIENDSHIP;
    public static final Identity<PostsRecord, Integer> IDENTITY_POSTS = Identities0.IDENTITY_POSTS;
    public static final Identity<SessionsRecord, Integer> IDENTITY_SESSIONS = Identities0.IDENTITY_SESSIONS;
    public static final Identity<SettingsRecord, Integer> IDENTITY_SETTINGS = Identities0.IDENTITY_SETTINGS;
    public static final Identity<UsersRecord, Integer> IDENTITY_USERS = Identities0.IDENTITY_USERS;
    public static final Identity<VerificationRecord, Integer> IDENTITY_VERIFICATION = Identities0.IDENTITY_VERIFICATION;

    // -------------------------------------------------------------------------
    // UNIQUE and PRIMARY KEY definitions
    // -------------------------------------------------------------------------

    public static final UniqueKey<AuthRecord> KEY_AUTH_PRIMARY = UniqueKeys0.KEY_AUTH_PRIMARY;
    public static final UniqueKey<AuthRecord> KEY_AUTH_UID_UNIQUE = UniqueKeys0.KEY_AUTH_UID_UNIQUE;
    public static final UniqueKey<AuthRecord> KEY_AUTH_EMAIL_UNIQUE = UniqueKeys0.KEY_AUTH_EMAIL_UNIQUE;
    public static final UniqueKey<FriendshipRecord> KEY_FRIENDSHIP_PRIMARY = UniqueKeys0.KEY_FRIENDSHIP_PRIMARY;
    public static final UniqueKey<PostsRecord> KEY_POSTS_PRIMARY = UniqueKeys0.KEY_POSTS_PRIMARY;
    public static final UniqueKey<PostsRecord> KEY_POSTS_ID_UNIQUE = UniqueKeys0.KEY_POSTS_ID_UNIQUE;
    public static final UniqueKey<SessionsRecord> KEY_SESSIONS_PRIMARY = UniqueKeys0.KEY_SESSIONS_PRIMARY;
    public static final UniqueKey<SessionsRecord> KEY_SESSIONS_SESSION_ID_UNIQUE = UniqueKeys0.KEY_SESSIONS_SESSION_ID_UNIQUE;
    public static final UniqueKey<SessionsRecord> KEY_SESSIONS_COOKIE_UNIQUE = UniqueKeys0.KEY_SESSIONS_COOKIE_UNIQUE;
    public static final UniqueKey<SettingsRecord> KEY_SETTINGS_PRIMARY = UniqueKeys0.KEY_SETTINGS_PRIMARY;
    public static final UniqueKey<SettingsRecord> KEY_SETTINGS_EMAIL_UNIQUE = UniqueKeys0.KEY_SETTINGS_EMAIL_UNIQUE;
    public static final UniqueKey<UsersRecord> KEY_USERS_PRIMARY = UniqueKeys0.KEY_USERS_PRIMARY;
    public static final UniqueKey<UsersRecord> KEY_USERS_ID_UNIQUE = UniqueKeys0.KEY_USERS_ID_UNIQUE;
    public static final UniqueKey<UsersRecord> KEY_USERS_EMAIL_UNIQUE = UniqueKeys0.KEY_USERS_EMAIL_UNIQUE;
    public static final UniqueKey<UsersRecord> KEY_USERS_USER_NAME_UNIQUE = UniqueKeys0.KEY_USERS_USER_NAME_UNIQUE;
    public static final UniqueKey<VerificationRecord> KEY_VERIFICATION_PRIMARY = UniqueKeys0.KEY_VERIFICATION_PRIMARY;
    public static final UniqueKey<VerificationRecord> KEY_VERIFICATION_VERIFICATIONID_UNIQUE = UniqueKeys0.KEY_VERIFICATION_VERIFICATIONID_UNIQUE;
    public static final UniqueKey<VerificationRecord> KEY_VERIFICATION_USERID_UNIQUE = UniqueKeys0.KEY_VERIFICATION_USERID_UNIQUE;
    public static final UniqueKey<VerificationRecord> KEY_VERIFICATION_VERIFICATIONCODE_UNIQUE = UniqueKeys0.KEY_VERIFICATION_VERIFICATIONCODE_UNIQUE;

    // -------------------------------------------------------------------------
    // FOREIGN KEY definitions
    // -------------------------------------------------------------------------

    public static final ForeignKey<PostsRecord, UsersRecord> USERID = ForeignKeys0.USERID;

    // -------------------------------------------------------------------------
    // [#1459] distribute members to avoid static initialisers > 64kb
    // -------------------------------------------------------------------------

    private static class Identities0 {
        public static Identity<AuthRecord, Integer> IDENTITY_AUTH = Internal.createIdentity(Auth.AUTH, Auth.AUTH.ID);
        public static Identity<FriendshipRecord, Integer> IDENTITY_FRIENDSHIP = Internal.createIdentity(Friendship.FRIENDSHIP, Friendship.FRIENDSHIP.ID);
        public static Identity<PostsRecord, Integer> IDENTITY_POSTS = Internal.createIdentity(Posts.POSTS, Posts.POSTS.ID);
        public static Identity<SessionsRecord, Integer> IDENTITY_SESSIONS = Internal.createIdentity(Sessions.SESSIONS, Sessions.SESSIONS.SESSION_ID);
        public static Identity<SettingsRecord, Integer> IDENTITY_SETTINGS = Internal.createIdentity(Settings.SETTINGS, Settings.SETTINGS.ID);
        public static Identity<UsersRecord, Integer> IDENTITY_USERS = Internal.createIdentity(Users.USERS, Users.USERS.ID);
        public static Identity<VerificationRecord, Integer> IDENTITY_VERIFICATION = Internal.createIdentity(Verification.VERIFICATION, Verification.VERIFICATION.VERIFICATIONID);
    }

    private static class UniqueKeys0 {
        public static final UniqueKey<AuthRecord> KEY_AUTH_PRIMARY = Internal.createUniqueKey(Auth.AUTH, "KEY_Auth_PRIMARY", Auth.AUTH.ID);
        public static final UniqueKey<AuthRecord> KEY_AUTH_UID_UNIQUE = Internal.createUniqueKey(Auth.AUTH, "KEY_Auth_uid_UNIQUE", Auth.AUTH.ID);
        public static final UniqueKey<AuthRecord> KEY_AUTH_EMAIL_UNIQUE = Internal.createUniqueKey(Auth.AUTH, "KEY_Auth_email_UNIQUE", Auth.AUTH.EMAIL);
        public static final UniqueKey<FriendshipRecord> KEY_FRIENDSHIP_PRIMARY = Internal.createUniqueKey(Friendship.FRIENDSHIP, "KEY_Friendship_PRIMARY", Friendship.FRIENDSHIP.ID);
        public static final UniqueKey<PostsRecord> KEY_POSTS_PRIMARY = Internal.createUniqueKey(Posts.POSTS, "KEY_Posts_PRIMARY", Posts.POSTS.ID);
        public static final UniqueKey<PostsRecord> KEY_POSTS_ID_UNIQUE = Internal.createUniqueKey(Posts.POSTS, "KEY_Posts_id_UNIQUE", Posts.POSTS.ID);
        public static final UniqueKey<SessionsRecord> KEY_SESSIONS_PRIMARY = Internal.createUniqueKey(Sessions.SESSIONS, "KEY_Sessions_PRIMARY", Sessions.SESSIONS.SESSION_ID);
        public static final UniqueKey<SessionsRecord> KEY_SESSIONS_SESSION_ID_UNIQUE = Internal.createUniqueKey(Sessions.SESSIONS, "KEY_Sessions_session_id_UNIQUE", Sessions.SESSIONS.SESSION_ID);
        public static final UniqueKey<SessionsRecord> KEY_SESSIONS_COOKIE_UNIQUE = Internal.createUniqueKey(Sessions.SESSIONS, "KEY_Sessions_cookie_UNIQUE", Sessions.SESSIONS.COOKIE);
        public static final UniqueKey<SettingsRecord> KEY_SETTINGS_PRIMARY = Internal.createUniqueKey(Settings.SETTINGS, "KEY_Settings_PRIMARY", Settings.SETTINGS.ID);
        public static final UniqueKey<SettingsRecord> KEY_SETTINGS_EMAIL_UNIQUE = Internal.createUniqueKey(Settings.SETTINGS, "KEY_Settings_email_UNIQUE", Settings.SETTINGS.EMAIL);
        public static final UniqueKey<UsersRecord> KEY_USERS_PRIMARY = Internal.createUniqueKey(Users.USERS, "KEY_Users_PRIMARY", Users.USERS.ID);
        public static final UniqueKey<UsersRecord> KEY_USERS_ID_UNIQUE = Internal.createUniqueKey(Users.USERS, "KEY_Users_ID_UNIQUE", Users.USERS.ID);
        public static final UniqueKey<UsersRecord> KEY_USERS_EMAIL_UNIQUE = Internal.createUniqueKey(Users.USERS, "KEY_Users_email_UNIQUE", Users.USERS.EMAIL);
        public static final UniqueKey<UsersRecord> KEY_USERS_USER_NAME_UNIQUE = Internal.createUniqueKey(Users.USERS, "KEY_Users_user_name_UNIQUE", Users.USERS.USER_NAME);
        public static final UniqueKey<VerificationRecord> KEY_VERIFICATION_PRIMARY = Internal.createUniqueKey(Verification.VERIFICATION, "KEY_Verification_PRIMARY", Verification.VERIFICATION.VERIFICATIONID);
        public static final UniqueKey<VerificationRecord> KEY_VERIFICATION_VERIFICATIONID_UNIQUE = Internal.createUniqueKey(Verification.VERIFICATION, "KEY_Verification_VerificationID_UNIQUE", Verification.VERIFICATION.VERIFICATIONID);
        public static final UniqueKey<VerificationRecord> KEY_VERIFICATION_USERID_UNIQUE = Internal.createUniqueKey(Verification.VERIFICATION, "KEY_Verification_UserId_UNIQUE", Verification.VERIFICATION.USEREMAIL);
        public static final UniqueKey<VerificationRecord> KEY_VERIFICATION_VERIFICATIONCODE_UNIQUE = Internal.createUniqueKey(Verification.VERIFICATION, "KEY_Verification_VerificationCode_UNIQUE", Verification.VERIFICATION.VERIFICATIONCODE);
    }

    private static class ForeignKeys0 {
        public static final ForeignKey<PostsRecord, UsersRecord> USERID = Internal.createForeignKey(com.astroapi.db.Keys.KEY_USERS_PRIMARY, Posts.POSTS, "userId", Posts.POSTS.USERID);
    }
}
