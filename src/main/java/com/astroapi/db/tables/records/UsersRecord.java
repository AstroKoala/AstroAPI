/*
 * This file is generated by jOOQ.
 */
package com.astroapi.db.tables.records;


import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record7;
import org.jooq.Row7;
import org.jooq.impl.UpdatableRecordImpl;

import com.astroapi.db.tables.Users;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.12.1"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class UsersRecord extends UpdatableRecordImpl<UsersRecord> implements Record7<Integer, String, String, String, Integer, Byte, String> {

    private static final long serialVersionUID = -1834569870;

    /**
     * Setter for <code>Java.Users.id</code>.
     */
    public void setId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>Java.Users.id</code>.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>Java.Users.last_name</code>.
     */
    public void setLastName(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>Java.Users.last_name</code>.
     */
    public String getLastName() {
        return (String) get(1);
    }

    /**
     * Setter for <code>Java.Users.first_name</code>.
     */
    public void setFirstName(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>Java.Users.first_name</code>.
     */
    public String getFirstName() {
        return (String) get(2);
    }

    /**
     * Setter for <code>Java.Users.email</code>.
     */
    public void setEmail(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>Java.Users.email</code>.
     */
    public String getEmail() {
        return (String) get(3);
    }

    /**
     * Setter for <code>Java.Users.age</code>.
     */
    public void setAge(Integer value) {
        set(4, value);
    }

    /**
     * Getter for <code>Java.Users.age</code>.
     */
    public Integer getAge() {
        return (Integer) get(4);
    }

    /**
     * Setter for <code>Java.Users.verified</code>.
     */
    public void setVerified(Byte value) {
        set(5, value);
    }

    /**
     * Getter for <code>Java.Users.verified</code>.
     */
    public Byte getVerified() {
        return (Byte) get(5);
    }

    /**
     * Setter for <code>Java.Users.user_name</code>.
     */
    public void setUserName(String value) {
        set(6, value);
    }

    /**
     * Getter for <code>Java.Users.user_name</code>.
     */
    public String getUserName() {
        return (String) get(6);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record7 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row7<Integer, String, String, String, Integer, Byte, String> fieldsRow() {
        return (Row7) super.fieldsRow();
    }

    @Override
    public Row7<Integer, String, String, String, Integer, Byte, String> valuesRow() {
        return (Row7) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return Users.USERS.ID;
    }

    @Override
    public Field<String> field2() {
        return Users.USERS.LAST_NAME;
    }

    @Override
    public Field<String> field3() {
        return Users.USERS.FIRST_NAME;
    }

    @Override
    public Field<String> field4() {
        return Users.USERS.EMAIL;
    }

    @Override
    public Field<Integer> field5() {
        return Users.USERS.AGE;
    }

    @Override
    public Field<Byte> field6() {
        return Users.USERS.VERIFIED;
    }

    @Override
    public Field<String> field7() {
        return Users.USERS.USER_NAME;
    }

    @Override
    public Integer component1() {
        return getId();
    }

    @Override
    public String component2() {
        return getLastName();
    }

    @Override
    public String component3() {
        return getFirstName();
    }

    @Override
    public String component4() {
        return getEmail();
    }

    @Override
    public Integer component5() {
        return getAge();
    }

    @Override
    public Byte component6() {
        return getVerified();
    }

    @Override
    public String component7() {
        return getUserName();
    }

    @Override
    public Integer value1() {
        return getId();
    }

    @Override
    public String value2() {
        return getLastName();
    }

    @Override
    public String value3() {
        return getFirstName();
    }

    @Override
    public String value4() {
        return getEmail();
    }

    @Override
    public Integer value5() {
        return getAge();
    }

    @Override
    public Byte value6() {
        return getVerified();
    }

    @Override
    public String value7() {
        return getUserName();
    }

    @Override
    public UsersRecord value1(Integer value) {
        setId(value);
        return this;
    }

    @Override
    public UsersRecord value2(String value) {
        setLastName(value);
        return this;
    }

    @Override
    public UsersRecord value3(String value) {
        setFirstName(value);
        return this;
    }

    @Override
    public UsersRecord value4(String value) {
        setEmail(value);
        return this;
    }

    @Override
    public UsersRecord value5(Integer value) {
        setAge(value);
        return this;
    }

    @Override
    public UsersRecord value6(Byte value) {
        setVerified(value);
        return this;
    }

    @Override
    public UsersRecord value7(String value) {
        setUserName(value);
        return this;
    }

    @Override
    public UsersRecord values(Integer value1, String value2, String value3, String value4, Integer value5, Byte value6, String value7) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached UsersRecord
     */
    public UsersRecord() {
        super(Users.USERS);
    }

    /**
     * Create a detached, initialised UsersRecord
     */
    public UsersRecord(Integer id, String lastName, String firstName, String email, Integer age, Byte verified, String userName) {
        super(Users.USERS);

        set(0, id);
        set(1, lastName);
        set(2, firstName);
        set(3, email);
        set(4, age);
        set(5, verified);
        set(6, userName);
    }
}
